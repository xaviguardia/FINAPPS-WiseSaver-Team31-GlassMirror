@using querygram
@model LoginModel

@{
    ViewBag.Title = "Log in";
}



<div class="login-wrapper">
    @using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="popup-header">
            <a href="#" class="pull-left"><i class="icon-user-plus"></i></a>
            <span class="text-semibold">User Login</span>
            
        </div>
        <div class="well">
            <div class="form-group has-feedback">
                  <div class=" login">
                @Html.LabelFor(m => m.UserName)
                      </div>
                @Html.TextBoxFor(m => m.UserName)
                @Html.ValidationMessageFor(m => m.UserName)
                <i class="icon-users "></i>
            </div>

            <div class="form-group has-feedback login">
                <div class=" login">
                @Html.LabelFor(m => m.Password)
                    </div>
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
                <i class="icon-lock "></i>
            </div>

            <div class="row form-actions">
                <div class="col-xs-6">
                    <div class="checkbox checkbox-success">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
                    </div>
                </div>

                <div class="col-xs-6">
                    <button type="submit" class="btn btn-warning pull-right"><i class="icon-menu2"></i>Log in</button>
                </div>
            </div>
        </div>
    }
</div>



